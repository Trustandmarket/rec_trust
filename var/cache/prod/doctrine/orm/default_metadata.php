<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__User__CLASSMETADATA__' => 0,
'App_Entity_User_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_User_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_User_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__ResetPasswordRequest__CLASSMETADATA__' => 2,
'App_Entity_ResetPasswordRequest_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_ResetPasswordRequest_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_ResetPasswordRequest_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__UserUniqueData__CLASSMETADATA__' => 3,
'App_Entity_UserUniqueData_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_UserUniqueData_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_UserUniqueData_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__WpCommentmeta__CLASSMETADATA__' => 4,
'App_Entity_WpCommentmeta_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_WpCommentmeta_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_WpCommentmeta_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__WpComments__CLASSMETADATA__' => 5,
'App_Entity_WpComments_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_WpComments_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_WpComments_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__WpOptions__CLASSMETADATA__' => 6,
'App_Entity_WpOptions_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_WpOptions_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_WpOptions_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__WpPostmeta__CLASSMETADATA__' => 7,
'App_Entity_WpPostmeta_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_WpPostmeta_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_WpPostmeta_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__WpPosts__CLASSMETADATA__' => 8,
'App_Entity_WpPosts_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_WpPosts_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_WpPosts_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__WpTermmeta__CLASSMETADATA__' => 9,
'App_Entity_WpTermmeta_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_WpTermmeta_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_WpTermmeta_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__WpTermRelationships__CLASSMETADATA__' => 10,
'App_Entity_WpTermRelationships_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_WpTermRelationships_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_WpTermRelationships_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__WpTerms__CLASSMETADATA__' => 11,
'App_Entity_WpTerms_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_WpTerms_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_WpTerms_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__WpTermTaxonomy__CLASSMETADATA__' => 12,
'App_Entity_WpTermTaxonomy_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_WpTermTaxonomy_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_WpTermTaxonomy_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__WpUsermeta__CLASSMETADATA__' => 13,
'App_Entity_WpUsermeta_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_WpUsermeta_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_WpUsermeta_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__Abonnement__CLASSMETADATA__' => 14,
'App_Entity_Abonnement_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 15,
'App_Entity_Abonnement_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_Abonnement_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__Channel__CLASSMETADATA__' => 16,
'App_Entity_Channel_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_Channel_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_Channel_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__ChatMessage__CLASSMETADATA__' => 17,
'App_Entity_ChatMessage_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_ChatMessage_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_ChatMessage_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__Departement__CLASSMETADATA__' => 18,
'App_Entity_Departement_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 19,
'App_Entity_Departement_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_Departement_$GEDMO_SLUGGABLE_CLASSMETADATA' => 20,
'App__Entity__ExtTranslationWpCommentMeta__CLASSMETADATA__' => 21,
'App_Entity_ExtTranslationWpCommentMeta_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_ExtTranslationWpCommentMeta_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_ExtTranslationWpCommentMeta_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__ExtTranslationWpComments__CLASSMETADATA__' => 22,
'App_Entity_ExtTranslationWpComments_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_ExtTranslationWpComments_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_ExtTranslationWpComments_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__ExtTranslationWpOptions__CLASSMETADATA__' => 23,
'App_Entity_ExtTranslationWpOptions_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_ExtTranslationWpOptions_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_ExtTranslationWpOptions_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__ExtTranslationWpPostmeta__CLASSMETADATA__' => 24,
'App_Entity_ExtTranslationWpPostmeta_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_ExtTranslationWpPostmeta_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_ExtTranslationWpPostmeta_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__ExtTranslationWpPosts__CLASSMETADATA__' => 25,
'App_Entity_ExtTranslationWpPosts_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_ExtTranslationWpPosts_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_ExtTranslationWpPosts_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__ExtTranslationWpTerms__CLASSMETADATA__' => 26,
'App_Entity_ExtTranslationWpTerms_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_ExtTranslationWpTerms_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_ExtTranslationWpTerms_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__ExtTranslationWpTermTaxonomy__CLASSMETADATA__' => 27,
'App_Entity_ExtTranslationWpTermTaxonomy_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_ExtTranslationWpTermTaxonomy_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_ExtTranslationWpTermTaxonomy_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__ExtTranslationWpUsermeta__CLASSMETADATA__' => 28,
'App_Entity_ExtTranslationWpUsermeta_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_ExtTranslationWpUsermeta_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_ExtTranslationWpUsermeta_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__InformationsFacturationUtilisateur__CLASSMETADATA__' => 29,
'App_Entity_InformationsFacturationUtilisateur_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_InformationsFacturationUtilisateur_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_InformationsFacturationUtilisateur_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__Message__CLASSMETADATA__' => 30,
'App_Entity_Message_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_Message_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_Message_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__Newsletter__CLASSMETADATA__' => 31,
'App_Entity_Newsletter_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 1,
'App_Entity_Newsletter_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_Newsletter_$GEDMO_SLUGGABLE_CLASSMETADATA' => 1,
'App__Entity__OffreInterne__CLASSMETADATA__' => 32,
'App_Entity_OffreInterne_$GEDMO_TIMESTAMPABLE_CLASSMETADATA' => 33,
'App_Entity_OffreInterne_$GEDMO_BLAMEABLE_CLASSMETADATA' => 1,
'App_Entity_OffreInterne_$GEDMO_SLUGGABLE_CLASSMETADATA' => 34,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\User',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'userNicename' => [
                            'fieldName' => 'userNicename',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 50,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'user_nicename',
                        ],
                        'usernameCanonical' => [
                            'fieldName' => 'usernameCanonical',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'username_canonical',
                        ],
                        'userRegistered' => [
                            'fieldName' => 'userRegistered',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'user_registered',
                        ],
                        'updatedAt' => [
                            'fieldName' => 'updatedAt',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'updated_at',
                        ],
                        'userActivationKey' => [
                            'fieldName' => 'userActivationKey',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'user_activation_key',
                        ],
                        'displayName' => [
                            'fieldName' => 'displayName',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 250,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'display_name',
                        ],
                        'landingPage' => [
                            'fieldName' => 'landingPage',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 250,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'landing_page',
                        ],
                        'userStatus' => [
                            'fieldName' => 'userStatus',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'user_status',
                        ],
                        'enabled' => [
                            'fieldName' => 'enabled',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'enabled',
                        ],
                        'lastActivityAt' => [
                            'fieldName' => 'lastActivityAt',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'last_activity_at',
                        ],
                        'email_canonical' => [
                            'fieldName' => 'email_canonical',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 180,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'email_canonical',
                        ],
                        'userEmail' => [
                            'fieldName' => 'userEmail',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 180,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'userEmail',
                        ],
                        'roles' => [
                            'fieldName' => 'roles',
                            'type' => 'json',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'roles',
                        ],
                        'password' => [
                            'fieldName' => 'password',
                            'type' => 'string',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'userPass',
                        ],
                        'isVerified' => [
                            'fieldName' => 'isVerified',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'is_verified',
                        ],
                        'dateNaissance' => [
                            'fieldName' => 'dateNaissance',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 190,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'date_naissance',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'user_nicename' => 'userNicename',
                        'username_canonical' => 'usernameCanonical',
                        'user_registered' => 'userRegistered',
                        'updated_at' => 'updatedAt',
                        'user_activation_key' => 'userActivationKey',
                        'display_name' => 'displayName',
                        'landing_page' => 'landingPage',
                        'user_status' => 'userStatus',
                        'enabled' => 'enabled',
                        'last_activity_at' => 'lastActivityAt',
                        'email_canonical' => 'email_canonical',
                        'userEmail' => 'userEmail',
                        'roles' => 'roles',
                        'userPass' => 'password',
                        'is_verified' => 'isVerified',
                        'date_naissance' => 'dateNaissance',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'userNicename' => 'user_nicename',
                        'usernameCanonical' => 'username_canonical',
                        'userRegistered' => 'user_registered',
                        'updatedAt' => 'updated_at',
                        'userActivationKey' => 'user_activation_key',
                        'displayName' => 'display_name',
                        'landingPage' => 'landing_page',
                        'userStatus' => 'user_status',
                        'enabled' => 'enabled',
                        'lastActivityAt' => 'last_activity_at',
                        'email_canonical' => 'email_canonical',
                        'userEmail' => 'userEmail',
                        'roles' => 'roles',
                        'password' => 'userPass',
                        'isVerified' => 'is_verified',
                        'dateNaissance' => 'date_naissance',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'wp_users',
                        'quoted' => true,
                    ],
                ],
                'entityListeners' => [
                    [
                        'preUpdate' => [
                            [
                                'class' => 'App\\EventListener\\UserPreUpdate',
                                'method' => 'preUpdate',
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'sentMessages' => [
                            'fieldName' => 'sentMessages',
                            'mappedBy' => 'sender',
                            'targetEntity' => 'App\\Entity\\Message',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'receivedMessages' => [
                            'fieldName' => 'receivedMessages',
                            'mappedBy' => 'addressee',
                            'targetEntity' => 'App\\Entity\\Message',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'channels1' => [
                            'fieldName' => 'channels1',
                            'mappedBy' => 'firstUser',
                            'targetEntity' => 'App\\Entity\\Channel',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'channels2' => [
                            'fieldName' => 'channels2',
                            'mappedBy' => 'secondUser',
                            'targetEntity' => 'App\\Entity\\Channel',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'userUniqueData' => [
                            'fieldName' => 'userUniqueData',
                            'targetEntity' => 'App\\Entity\\UserUniqueData',
                            'joinColumns' => [],
                            'mappedBy' => 'user',
                            'inversedBy' => null,
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 1,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'abonnements' => [
                            'fieldName' => 'abonnements',
                            'mappedBy' => 'user',
                            'targetEntity' => 'App\\Entity\\Abonnement',
                            'cascade' => [],
                            'orphanRemoval' => true,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'informationsFacturationUtilisateur' => [
                            'fieldName' => 'informationsFacturationUtilisateur',
                            'targetEntity' => 'App\\Entity\\InformationsFacturationUtilisateur',
                            'joinColumns' => [],
                            'mappedBy' => 'profile',
                            'inversedBy' => null,
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 1,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => [],
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\ResetPasswordRequest',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\ResetPasswordRequest',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ResetPasswordRequestRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'selector' => [
                            'fieldName' => 'selector',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 20,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'selector',
                        ],
                        'hashedToken' => [
                            'fieldName' => 'hashedToken',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 100,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'hashed_token',
                        ],
                        'requestedAt' => [
                            'fieldName' => 'requestedAt',
                            'type' => 'datetime_immutable',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'requested_at',
                        ],
                        'expiresAt' => [
                            'fieldName' => 'expiresAt',
                            'type' => 'datetime_immutable',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'expires_at',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'selector' => 'selector',
                        'hashed_token' => 'hashedToken',
                        'requested_at' => 'requestedAt',
                        'expires_at' => 'expiresAt',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'selector' => 'selector',
                        'hashedToken' => 'hashed_token',
                        'requestedAt' => 'requested_at',
                        'expiresAt' => 'expires_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'reset_password_request',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => [
                            'fieldName' => 'user',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => null,
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\ResetPasswordRequest',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\UserUniqueData',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\UserUniqueData',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserUniqueDataRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'nomCommercial' => [
                            'fieldName' => 'nomCommercial',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'nom_commercial',
                        ],
                        'lastName' => [
                            'fieldName' => 'lastName',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'last_name',
                        ],
                        'firstName' => [
                            'fieldName' => 'firstName',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'first_name',
                        ],
                        'bdaytime' => [
                            'fieldName' => 'bdaytime',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 100,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'bdaytime',
                        ],
                        'sexe' => [
                            'fieldName' => 'sexe',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 30,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'sexe',
                        ],
                        'nationalityCountry' => [
                            'fieldName' => 'nationalityCountry',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 20,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'nationality_country',
                        ],
                        'residenceCountry' => [
                            'fieldName' => 'residenceCountry',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 20,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'residence_country',
                        ],
                        'billingEmail' => [
                            'fieldName' => 'billingEmail',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 50,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'billing_email',
                        ],
                        'telephone' => [
                            'fieldName' => 'telephone',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 100,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'telephone',
                        ],
                        'raisonSociale' => [
                            'fieldName' => 'raisonSociale',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'raison_sociale',
                        ],
                        'postCode' => [
                            'fieldName' => 'postCode',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 100,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'post_code',
                        ],
                        'siret' => [
                            'fieldName' => 'siret',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 100,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'siret',
                        ],
                        'paysDomicile' => [
                            'fieldName' => 'paysDomicile',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 20,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'pays_domicile',
                        ],
                        'numeroNomRueDomicile' => [
                            'fieldName' => 'numeroNomRueDomicile',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'numero_nom_rue_domicile',
                        ],
                        'codePostalDomicile' => [
                            'fieldName' => 'codePostalDomicile',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 100,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'code_postal_domicile',
                        ],
                        'villeDomicile' => [
                            'fieldName' => 'villeDomicile',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 100,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'ville_domicile',
                        ],
                        'paysLivraison' => [
                            'fieldName' => 'paysLivraison',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 20,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'pays_livraison',
                        ],
                        'numeroNomRueLivraison' => [
                            'fieldName' => 'numeroNomRueLivraison',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'numero_nom_rue_livraison',
                        ],
                        'codePostalLivraison' => [
                            'fieldName' => 'codePostalLivraison',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 100,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'code_postal_livraison',
                        ],
                        'villeLivraison' => [
                            'fieldName' => 'villeLivraison',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'ville_livraison',
                        ],
                        'mp_user_card_id' => [
                            'fieldName' => 'mp_user_card_id',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 50,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'mp_user_card_id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom_commercial' => 'nomCommercial',
                        'last_name' => 'lastName',
                        'first_name' => 'firstName',
                        'bdaytime' => 'bdaytime',
                        'sexe' => 'sexe',
                        'nationality_country' => 'nationalityCountry',
                        'residence_country' => 'residenceCountry',
                        'billing_email' => 'billingEmail',
                        'telephone' => 'telephone',
                        'raison_sociale' => 'raisonSociale',
                        'post_code' => 'postCode',
                        'siret' => 'siret',
                        'pays_domicile' => 'paysDomicile',
                        'numero_nom_rue_domicile' => 'numeroNomRueDomicile',
                        'code_postal_domicile' => 'codePostalDomicile',
                        'ville_domicile' => 'villeDomicile',
                        'pays_livraison' => 'paysLivraison',
                        'numero_nom_rue_livraison' => 'numeroNomRueLivraison',
                        'code_postal_livraison' => 'codePostalLivraison',
                        'ville_livraison' => 'villeLivraison',
                        'mp_user_card_id' => 'mp_user_card_id',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nomCommercial' => 'nom_commercial',
                        'lastName' => 'last_name',
                        'firstName' => 'first_name',
                        'bdaytime' => 'bdaytime',
                        'sexe' => 'sexe',
                        'nationalityCountry' => 'nationality_country',
                        'residenceCountry' => 'residence_country',
                        'billingEmail' => 'billing_email',
                        'telephone' => 'telephone',
                        'raisonSociale' => 'raison_sociale',
                        'postCode' => 'post_code',
                        'siret' => 'siret',
                        'paysDomicile' => 'pays_domicile',
                        'numeroNomRueDomicile' => 'numero_nom_rue_domicile',
                        'codePostalDomicile' => 'code_postal_domicile',
                        'villeDomicile' => 'ville_domicile',
                        'paysLivraison' => 'pays_livraison',
                        'numeroNomRueLivraison' => 'numero_nom_rue_livraison',
                        'codePostalLivraison' => 'code_postal_livraison',
                        'villeLivraison' => 'ville_livraison',
                        'mp_user_card_id' => 'mp_user_card_id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user_unique_data',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => [
                            'fieldName' => 'user',
                            'targetEntity' => 'App\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'unique' => true,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'mappedBy' => null,
                            'inversedBy' => 'userUniqueData',
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 1,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\UserUniqueData',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                        ],
                        'departement' => [
                            'fieldName' => 'departement',
                            'joinColumns' => [
                                [
                                    'name' => 'departement_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'userUniqueData',
                            'targetEntity' => 'App\\Entity\\Departement',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\UserUniqueData',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'departement_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'departement_id' => 'departement_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'departement_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\WpCommentmeta',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\WpCommentmeta',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\WpCommentmetaRepository',
                ],
                'identifier' => [
                    [
                        'metaId',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'metaId' => [
                            'fieldName' => 'metaId',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'meta_id',
                            'id' => true,
                        ],
                        'commentId' => [
                            'fieldName' => 'commentId',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'comment_id',
                        ],
                        'metaKey' => [
                            'fieldName' => 'metaKey',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'meta_key',
                        ],
                        'metaValue' => [
                            'fieldName' => 'metaValue',
                            'type' => 'text',
                            'scale' => null,
                            'length' => 0,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'meta_value',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'meta_id' => 'metaId',
                        'comment_id' => 'commentId',
                        'meta_key' => 'metaKey',
                        'meta_value' => 'metaValue',
                    ],
                ],
                'columnNames' => [
                    [
                        'metaId' => 'meta_id',
                        'commentId' => 'comment_id',
                        'metaKey' => 'meta_key',
                        'metaValue' => 'meta_value',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'wp_commentmeta',
                    ],
                ],
                'associationMappings' => [
                    [
                        'extTranslationWpCommentMetas' => [
                            'fieldName' => 'extTranslationWpCommentMetas',
                            'mappedBy' => 'foreign_key',
                            'targetEntity' => 'App\\Entity\\ExtTranslationWpCommentMeta',
                            'cascade' => [],
                            'orphanRemoval' => true,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\WpCommentmeta',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\WpComments',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\WpComments',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\WpCommentsRepository',
                ],
                'identifier' => [
                    [
                        'commentId',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'commentId' => [
                            'fieldName' => 'commentId',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'comment_ID',
                            'id' => true,
                        ],
                        'commentPostId' => [
                            'fieldName' => 'commentPostId',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'comment_post_ID',
                        ],
                        'commentAuthor' => [
                            'fieldName' => 'commentAuthor',
                            'type' => 'text',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'comment_author',
                        ],
                        'commentAuthorEmail' => [
                            'fieldName' => 'commentAuthorEmail',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 100,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'comment_author_email',
                        ],
                        'commentAuthorUrl' => [
                            'fieldName' => 'commentAuthorUrl',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 200,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'comment_author_url',
                        ],
                        'commentAuthorIp' => [
                            'fieldName' => 'commentAuthorIp',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 100,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'comment_author_IP',
                        ],
                        'commentDate' => [
                            'fieldName' => 'commentDate',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'default' => '2000-01-01 00:00:00',
                            ],
                            'columnName' => 'comment_date',
                        ],
                        'commentDateGmt' => [
                            'fieldName' => 'commentDateGmt',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'default' => '2000-01-01 00:00:00',
                            ],
                            'columnName' => 'comment_date_gmt',
                        ],
                        'commentContent' => [
                            'fieldName' => 'commentContent',
                            'type' => 'text',
                            'scale' => null,
                            'length' => 65535,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'comment_content',
                        ],
                        'commentKarma' => [
                            'fieldName' => 'commentKarma',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'comment_karma',
                        ],
                        'commentApproved' => [
                            'fieldName' => 'commentApproved',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 20,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'default' => '1',
                            ],
                            'columnName' => 'comment_approved',
                        ],
                        'commentAgent' => [
                            'fieldName' => 'commentAgent',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'comment_agent',
                        ],
                        'commentType' => [
                            'fieldName' => 'commentType',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 20,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'comment_type',
                        ],
                        'commentParent' => [
                            'fieldName' => 'commentParent',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'comment_parent',
                        ],
                        'userId' => [
                            'fieldName' => 'userId',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'user_id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'comment_ID' => 'commentId',
                        'comment_post_ID' => 'commentPostId',
                        'comment_author' => 'commentAuthor',
                        'comment_author_email' => 'commentAuthorEmail',
                        'comment_author_url' => 'commentAuthorUrl',
                        'comment_author_IP' => 'commentAuthorIp',
                        'comment_date' => 'commentDate',
                        'comment_date_gmt' => 'commentDateGmt',
                        'comment_content' => 'commentContent',
                        'comment_karma' => 'commentKarma',
                        'comment_approved' => 'commentApproved',
                        'comment_agent' => 'commentAgent',
                        'comment_type' => 'commentType',
                        'comment_parent' => 'commentParent',
                        'user_id' => 'userId',
                    ],
                ],
                'columnNames' => [
                    [
                        'commentId' => 'comment_ID',
                        'commentPostId' => 'comment_post_ID',
                        'commentAuthor' => 'comment_author',
                        'commentAuthorEmail' => 'comment_author_email',
                        'commentAuthorUrl' => 'comment_author_url',
                        'commentAuthorIp' => 'comment_author_IP',
                        'commentDate' => 'comment_date',
                        'commentDateGmt' => 'comment_date_gmt',
                        'commentContent' => 'comment_content',
                        'commentKarma' => 'comment_karma',
                        'commentApproved' => 'comment_approved',
                        'commentAgent' => 'comment_agent',
                        'commentType' => 'comment_type',
                        'commentParent' => 'comment_parent',
                        'userId' => 'user_id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'wp_comments',
                        'indexes' => [
                            'comment_approved_date_gmt' => [
                                'columns' => [
                                    'comment_approved',
                                    'comment_date_gmt',
                                ],
                            ],
                            'comment_date_gmt' => [
                                'columns' => [
                                    'comment_date_gmt',
                                ],
                            ],
                            'comment_author_email' => [
                                'columns' => [
                                    'comment_author_email',
                                ],
                            ],
                            'comment_post_ID' => [
                                'columns' => [
                                    'comment_post_ID',
                                ],
                            ],
                            'comment_parent' => [
                                'columns' => [
                                    'comment_parent',
                                ],
                            ],
                            'woo_idx_comment_type' => [
                                'columns' => [
                                    'comment_type',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'extTranslationWpComments' => [
                            'fieldName' => 'extTranslationWpComments',
                            'mappedBy' => 'foreign_key',
                            'targetEntity' => 'App\\Entity\\ExtTranslationWpComments',
                            'cascade' => [],
                            'orphanRemoval' => true,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\WpComments',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\WpOptions',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\WpOptions',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\WpOptionsRepository',
                ],
                'identifier' => [
                    [
                        'optionId',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'optionId' => [
                            'fieldName' => 'optionId',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'option_id',
                            'id' => true,
                        ],
                        'optionName' => [
                            'fieldName' => 'optionName',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'option_name',
                        ],
                        'optionValue' => [
                            'fieldName' => 'optionValue',
                            'type' => 'text',
                            'scale' => null,
                            'length' => 0,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'option_value',
                        ],
                        'autoload' => [
                            'fieldName' => 'autoload',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 20,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'default' => 'yes',
                            ],
                            'columnName' => 'autoload',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'option_id' => 'optionId',
                        'option_name' => 'optionName',
                        'option_value' => 'optionValue',
                        'autoload' => 'autoload',
                    ],
                ],
                'columnNames' => [
                    [
                        'optionId' => 'option_id',
                        'optionName' => 'option_name',
                        'optionValue' => 'option_value',
                        'autoload' => 'autoload',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'wp_options',
                    ],
                ],
                'associationMappings' => [
                    [
                        'extTranslationWpOptions' => [
                            'fieldName' => 'extTranslationWpOptions',
                            'mappedBy' => 'foreign_key',
                            'targetEntity' => 'App\\Entity\\ExtTranslationWpOptions',
                            'cascade' => [],
                            'orphanRemoval' => true,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\WpOptions',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\WpPostmeta',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\WpPostmeta',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\WpPostmetaRepository',
                ],
                'identifier' => [
                    [
                        'metaId',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'metaId' => [
                            'fieldName' => 'metaId',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'meta_id',
                            'id' => true,
                        ],
                        'postId' => [
                            'fieldName' => 'postId',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'post_id',
                        ],
                        'metaKey' => [
                            'fieldName' => 'metaKey',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'meta_key',
                        ],
                        'metaValue' => [
                            'fieldName' => 'metaValue',
                            'type' => 'text',
                            'scale' => null,
                            'length' => 0,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'meta_value',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'meta_id' => 'metaId',
                        'post_id' => 'postId',
                        'meta_key' => 'metaKey',
                        'meta_value' => 'metaValue',
                    ],
                ],
                'columnNames' => [
                    [
                        'metaId' => 'meta_id',
                        'postId' => 'post_id',
                        'metaKey' => 'meta_key',
                        'metaValue' => 'meta_value',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'wp_postmeta',
                        'indexes' => [
                            'meta_key' => [
                                'columns' => [
                                    'meta_key',
                                ],
                            ],
                            'post_id' => [
                                'columns' => [
                                    'post_id',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'extTranslationWpPostmetas' => [
                            'fieldName' => 'extTranslationWpPostmetas',
                            'mappedBy' => 'foreign_key',
                            'targetEntity' => 'App\\Entity\\ExtTranslationWpPostmeta',
                            'cascade' => [],
                            'orphanRemoval' => true,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\WpPostmeta',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\WpPosts',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\WpPosts',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\WpPostsRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                            'id' => true,
                        ],
                        'postAuthor' => [
                            'fieldName' => 'postAuthor',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'post_author',
                        ],
                        'postDate' => [
                            'fieldName' => 'postDate',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'default' => '2000-01-01 00:00:00',
                            ],
                            'columnName' => 'post_date',
                        ],
                        'postDateGmt' => [
                            'fieldName' => 'postDateGmt',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'default' => '2000-01-01 00:00:00',
                            ],
                            'columnName' => 'post_date_gmt',
                        ],
                        'postContent' => [
                            'fieldName' => 'postContent',
                            'type' => 'text',
                            'scale' => null,
                            'length' => 0,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'post_content',
                        ],
                        'postTitle' => [
                            'fieldName' => 'postTitle',
                            'type' => 'text',
                            'scale' => null,
                            'length' => 65535,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'post_title',
                        ],
                        'postExcerpt' => [
                            'fieldName' => 'postExcerpt',
                            'type' => 'text',
                            'scale' => null,
                            'length' => 65535,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'post_excerpt',
                        ],
                        'postStatus' => [
                            'fieldName' => 'postStatus',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 20,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'default' => 'publish',
                            ],
                            'columnName' => 'post_status',
                        ],
                        'commentStatus' => [
                            'fieldName' => 'commentStatus',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 20,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'default' => 'open',
                            ],
                            'columnName' => 'comment_status',
                        ],
                        'pingStatus' => [
                            'fieldName' => 'pingStatus',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 20,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'default' => 'open',
                            ],
                            'columnName' => 'ping_status',
                        ],
                        'postPassword' => [
                            'fieldName' => 'postPassword',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'post_password',
                        ],
                        'postName' => [
                            'fieldName' => 'postName',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 200,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'post_name',
                        ],
                        'toPing' => [
                            'fieldName' => 'toPing',
                            'type' => 'text',
                            'scale' => null,
                            'length' => 65535,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'to_ping',
                        ],
                        'pinged' => [
                            'fieldName' => 'pinged',
                            'type' => 'text',
                            'scale' => null,
                            'length' => 65535,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'pinged',
                        ],
                        'postModified' => [
                            'fieldName' => 'postModified',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'default' => '2000-01-01 00:00:00',
                            ],
                            'columnName' => 'post_modified',
                        ],
                        'postModifiedGmt' => [
                            'fieldName' => 'postModifiedGmt',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'default' => '2000-01-01 00:00:00',
                            ],
                            'columnName' => 'post_modified_gmt',
                        ],
                        'postContentFiltered' => [
                            'fieldName' => 'postContentFiltered',
                            'type' => 'text',
                            'scale' => null,
                            'length' => 0,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'post_content_filtered',
                        ],
                        'postParent' => [
                            'fieldName' => 'postParent',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'post_parent',
                        ],
                        'guid' => [
                            'fieldName' => 'guid',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'guid',
                        ],
                        'menuOrder' => [
                            'fieldName' => 'menuOrder',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'menu_order',
                        ],
                        'postType' => [
                            'fieldName' => 'postType',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 20,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'default' => 'post',
                            ],
                            'columnName' => 'post_type',
                        ],
                        'postMimeType' => [
                            'fieldName' => 'postMimeType',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 100,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'post_mime_type',
                        ],
                        'commentCount' => [
                            'fieldName' => 'commentCount',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'comment_count',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'post_author' => 'postAuthor',
                        'post_date' => 'postDate',
                        'post_date_gmt' => 'postDateGmt',
                        'post_content' => 'postContent',
                        'post_title' => 'postTitle',
                        'post_excerpt' => 'postExcerpt',
                        'post_status' => 'postStatus',
                        'comment_status' => 'commentStatus',
                        'ping_status' => 'pingStatus',
                        'post_password' => 'postPassword',
                        'post_name' => 'postName',
                        'to_ping' => 'toPing',
                        'pinged' => 'pinged',
                        'post_modified' => 'postModified',
                        'post_modified_gmt' => 'postModifiedGmt',
                        'post_content_filtered' => 'postContentFiltered',
                        'post_parent' => 'postParent',
                        'guid' => 'guid',
                        'menu_order' => 'menuOrder',
                        'post_type' => 'postType',
                        'post_mime_type' => 'postMimeType',
                        'comment_count' => 'commentCount',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'postAuthor' => 'post_author',
                        'postDate' => 'post_date',
                        'postDateGmt' => 'post_date_gmt',
                        'postContent' => 'post_content',
                        'postTitle' => 'post_title',
                        'postExcerpt' => 'post_excerpt',
                        'postStatus' => 'post_status',
                        'commentStatus' => 'comment_status',
                        'pingStatus' => 'ping_status',
                        'postPassword' => 'post_password',
                        'postName' => 'post_name',
                        'toPing' => 'to_ping',
                        'pinged' => 'pinged',
                        'postModified' => 'post_modified',
                        'postModifiedGmt' => 'post_modified_gmt',
                        'postContentFiltered' => 'post_content_filtered',
                        'postParent' => 'post_parent',
                        'guid' => 'guid',
                        'menuOrder' => 'menu_order',
                        'postType' => 'post_type',
                        'postMimeType' => 'post_mime_type',
                        'commentCount' => 'comment_count',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'wp_posts',
                        'indexes' => [
                            'type_status_date' => [
                                'columns' => [
                                    'post_type',
                                    'post_status',
                                    'post_date',
                                    'id',
                                ],
                            ],
                            'post_parent' => [
                                'columns' => [
                                    'post_parent',
                                ],
                            ],
                            'post_name' => [
                                'columns' => [
                                    'post_name',
                                ],
                            ],
                            'post_author' => [
                                'columns' => [
                                    'post_author',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'extTranslationWpPosts' => [
                            'fieldName' => 'extTranslationWpPosts',
                            'mappedBy' => 'foreign_key',
                            'targetEntity' => 'App\\Entity\\ExtTranslationWpPosts',
                            'cascade' => [],
                            'orphanRemoval' => true,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\WpPosts',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
9 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\WpTermmeta',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\WpTermmeta',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\WpTermmetaRepository',
                ],
                'identifier' => [
                    [
                        'metaId',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'metaId' => [
                            'fieldName' => 'metaId',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'meta_id',
                            'id' => true,
                        ],
                        'termId' => [
                            'fieldName' => 'termId',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'term_id',
                        ],
                        'metaKey' => [
                            'fieldName' => 'metaKey',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'meta_key',
                        ],
                        'metaValue' => [
                            'fieldName' => 'metaValue',
                            'type' => 'text',
                            'scale' => null,
                            'length' => 0,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'meta_value',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'meta_id' => 'metaId',
                        'term_id' => 'termId',
                        'meta_key' => 'metaKey',
                        'meta_value' => 'metaValue',
                    ],
                ],
                'columnNames' => [
                    [
                        'metaId' => 'meta_id',
                        'termId' => 'term_id',
                        'metaKey' => 'meta_key',
                        'metaValue' => 'meta_value',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'wp_termmeta',
                        'indexes' => [
                            'meta_key' => [
                                'columns' => [
                                    'meta_key',
                                ],
                            ],
                            'term_id' => [
                                'columns' => [
                                    'term_id',
                                ],
                            ],
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
10 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\WpTermRelationships',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\WpTermRelationships',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\WpTermRelationshipsRepository',
                ],
                'identifier' => [
                    [
                        'objectId',
                        'termTaxonomyId',
                    ],
                ],
                'fieldMappings' => [
                    [
                        'objectId' => [
                            'fieldName' => 'objectId',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'object_id',
                            'id' => true,
                        ],
                        'termTaxonomyId' => [
                            'fieldName' => 'termTaxonomyId',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'term_taxonomy_id',
                            'id' => true,
                        ],
                        'termOrder' => [
                            'fieldName' => 'termOrder',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'term_order',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'object_id' => 'objectId',
                        'term_taxonomy_id' => 'termTaxonomyId',
                        'term_order' => 'termOrder',
                    ],
                ],
                'columnNames' => [
                    [
                        'objectId' => 'object_id',
                        'termTaxonomyId' => 'term_taxonomy_id',
                        'termOrder' => 'term_order',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'wp_term_relationships',
                        'indexes' => [
                            'term_taxonomy_id' => [
                                'columns' => [
                                    'term_taxonomy_id',
                                ],
                            ],
                        ],
                    ],
                ],
                'isIdentifierComposite' => [
                    true,
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
11 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\WpTerms',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\WpTerms',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\WpTermsRepository',
                ],
                'identifier' => [
                    [
                        'termId',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'termId' => [
                            'fieldName' => 'termId',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'term_id',
                            'id' => true,
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 200,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'name',
                        ],
                        'slug' => [
                            'fieldName' => 'slug',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 200,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'slug',
                        ],
                        'termGroup' => [
                            'fieldName' => 'termGroup',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'term_group',
                        ],
                        'termPrice' => [
                            'fieldName' => 'termPrice',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 100,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'term_price',
                        ],
                        'termIcon' => [
                            'fieldName' => 'termIcon',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'term_icon',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'term_id' => 'termId',
                        'name' => 'name',
                        'slug' => 'slug',
                        'term_group' => 'termGroup',
                        'term_price' => 'termPrice',
                        'term_icon' => 'termIcon',
                    ],
                ],
                'columnNames' => [
                    [
                        'termId' => 'term_id',
                        'name' => 'name',
                        'slug' => 'slug',
                        'termGroup' => 'term_group',
                        'termPrice' => 'term_price',
                        'termIcon' => 'term_icon',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'wp_terms',
                        'indexes' => [
                            'name' => [
                                'columns' => [
                                    'name',
                                ],
                            ],
                            'slug' => [
                                'columns' => [
                                    'slug',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'extTranslationWpTerms' => [
                            'fieldName' => 'extTranslationWpTerms',
                            'mappedBy' => 'foreign_key',
                            'targetEntity' => 'App\\Entity\\ExtTranslationWpTerms',
                            'cascade' => [],
                            'orphanRemoval' => true,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\WpTerms',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'wpTermTaxonomies' => [
                            'fieldName' => 'wpTermTaxonomies',
                            'mappedBy' => 'term',
                            'targetEntity' => 'App\\Entity\\WpTermTaxonomy',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\WpTerms',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
12 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\WpTermTaxonomy',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\WpTermTaxonomy',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\WpTermTaxonomyRepository',
                ],
                'identifier' => [
                    [
                        'termTaxonomyId',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'termTaxonomyId' => [
                            'fieldName' => 'termTaxonomyId',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'term_taxonomy_id',
                            'id' => true,
                        ],
                        'termId' => [
                            'fieldName' => 'termId',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'term_id',
                        ],
                        'taxonomy' => [
                            'fieldName' => 'taxonomy',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 32,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'taxonomy',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'scale' => null,
                            'length' => 0,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'description',
                        ],
                        'parent' => [
                            'fieldName' => 'parent',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'parent',
                        ],
                        'count' => [
                            'fieldName' => 'count',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'count',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'term_taxonomy_id' => 'termTaxonomyId',
                        'term_id' => 'termId',
                        'taxonomy' => 'taxonomy',
                        'description' => 'description',
                        'parent' => 'parent',
                        'count' => 'count',
                    ],
                ],
                'columnNames' => [
                    [
                        'termTaxonomyId' => 'term_taxonomy_id',
                        'termId' => 'term_id',
                        'taxonomy' => 'taxonomy',
                        'description' => 'description',
                        'parent' => 'parent',
                        'count' => 'count',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'wp_term_taxonomy',
                        'indexes' => [
                            'taxonomy' => [
                                'columns' => [
                                    'taxonomy',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'extTranslationWpTermTaxonomies' => [
                            'fieldName' => 'extTranslationWpTermTaxonomies',
                            'mappedBy' => 'foreign_key',
                            'targetEntity' => 'App\\Entity\\ExtTranslationWpTermTaxonomy',
                            'cascade' => [],
                            'orphanRemoval' => true,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\WpTermTaxonomy',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
13 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\WpUsermeta',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\WpUsermeta',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\WpUsermetaRepository',
                ],
                'identifier' => [
                    [
                        'umetaId',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'umetaId' => [
                            'fieldName' => 'umetaId',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'umeta_id',
                            'id' => true,
                        ],
                        'userId' => [
                            'fieldName' => 'userId',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'user_id',
                        ],
                        'metaKey' => [
                            'fieldName' => 'metaKey',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'meta_key',
                        ],
                        'metaValue' => [
                            'fieldName' => 'metaValue',
                            'type' => 'text',
                            'scale' => null,
                            'length' => 0,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'meta_value',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'umeta_id' => 'umetaId',
                        'user_id' => 'userId',
                        'meta_key' => 'metaKey',
                        'meta_value' => 'metaValue',
                    ],
                ],
                'columnNames' => [
                    [
                        'umetaId' => 'umeta_id',
                        'userId' => 'user_id',
                        'metaKey' => 'meta_key',
                        'metaValue' => 'meta_value',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'wp_usermeta',
                        'indexes' => [
                            'meta_key' => [
                                'columns' => [
                                    'meta_key',
                                ],
                            ],
                            'user_id' => [
                                'columns' => [
                                    'user_id',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'extTranslationWpUsermetas' => [
                            'fieldName' => 'extTranslationWpUsermetas',
                            'mappedBy' => 'foreign_key',
                            'targetEntity' => 'App\\Entity\\ExtTranslationWpUsermeta',
                            'cascade' => [],
                            'orphanRemoval' => true,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\WpUsermeta',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
14 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Abonnement',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Abonnement',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\AbonnementRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'tarif' => [
                            'fieldName' => 'tarif',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'tarif',
                        ],
                        'abonnementActif' => [
                            'fieldName' => 'abonnementActif',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'abonnement_actif',
                        ],
                        'dateFin' => [
                            'fieldName' => 'dateFin',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'date_fin',
                        ],
                        'tag' => [
                            'fieldName' => 'tag',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 20,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'tag',
                        ],
                        'nomOuSociete' => [
                            'fieldName' => 'nomOuSociete',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'nom_ou_societe',
                        ],
                        'adresse' => [
                            'fieldName' => 'adresse',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'adresse',
                        ],
                        'ville' => [
                            'fieldName' => 'ville',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'ville',
                        ],
                        'codePostal' => [
                            'fieldName' => 'codePostal',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'code_postal',
                        ],
                        'pays' => [
                            'fieldName' => 'pays',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 20,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'pays',
                        ],
                        'numeroTva' => [
                            'fieldName' => 'numeroTva',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'numero_tva',
                        ],
                        'reccuring_payment_id' => [
                            'fieldName' => 'reccuring_payment_id',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 180,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'reccuring_payment_id',
                        ],
                        'reccuring_payment_payin_id' => [
                            'fieldName' => 'reccuring_payment_payin_id',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 180,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'reccuring_payment_payin_id',
                        ],
                        'createdAt' => [
                            'fieldName' => 'createdAt',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'created_at',
                        ],
                        'updatedAt' => [
                            'fieldName' => 'updatedAt',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'updated_at',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'tarif' => 'tarif',
                        'abonnement_actif' => 'abonnementActif',
                        'date_fin' => 'dateFin',
                        'tag' => 'tag',
                        'nom_ou_societe' => 'nomOuSociete',
                        'adresse' => 'adresse',
                        'ville' => 'ville',
                        'code_postal' => 'codePostal',
                        'pays' => 'pays',
                        'numero_tva' => 'numeroTva',
                        'reccuring_payment_id' => 'reccuring_payment_id',
                        'reccuring_payment_payin_id' => 'reccuring_payment_payin_id',
                        'created_at' => 'createdAt',
                        'updated_at' => 'updatedAt',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'tarif' => 'tarif',
                        'abonnementActif' => 'abonnement_actif',
                        'dateFin' => 'date_fin',
                        'tag' => 'tag',
                        'nomOuSociete' => 'nom_ou_societe',
                        'adresse' => 'adresse',
                        'ville' => 'ville',
                        'codePostal' => 'code_postal',
                        'pays' => 'pays',
                        'numeroTva' => 'numero_tva',
                        'reccuring_payment_id' => 'reccuring_payment_id',
                        'reccuring_payment_payin_id' => 'reccuring_payment_payin_id',
                        'createdAt' => 'created_at',
                        'updatedAt' => 'updated_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'abonnement',
                    ],
                ],
                'entityListeners' => [
                    [
                        'prePersist' => [
                            [
                                'class' => 'App\\EventListener\\AbonnementPrePersist',
                                'method' => 'prePersist',
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => [
                            'fieldName' => 'user',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'abonnements',
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Abonnement',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'offre' => [
                            'fieldName' => 'offre',
                            'joinColumns' => [
                                [
                                    'name' => 'offre_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'abonnements',
                            'targetEntity' => 'App\\Entity\\OffreInterne',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Abonnement',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'offre_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'offre_id' => 'offre_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'offre_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
15 => [
    'create' => [
        'createdAt',
    ],
    'update' => [
        'updatedAt',
    ],
    'useObjectClass' => 'App\\Entity\\Abonnement',
],
16 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Channel',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Channel',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ChannelRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 190,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'name',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'wp_channels',
                    ],
                ],
                'associationMappings' => [
                    [
                        'messages' => [
                            'fieldName' => 'messages',
                            'mappedBy' => 'channel',
                            'targetEntity' => 'App\\Entity\\Message',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Channel',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'firstUser' => [
                            'fieldName' => 'firstUser',
                            'joinColumns' => [
                                [
                                    'name' => 'first_user_id',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'channels1',
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Channel',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'first_user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'first_user_id' => 'first_user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'first_user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'secondUser' => [
                            'fieldName' => 'secondUser',
                            'joinColumns' => [
                                [
                                    'name' => 'second_user_id',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'channels2',
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Channel',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'second_user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'second_user_id' => 'second_user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'second_user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
17 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\ChatMessage',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\ChatMessage',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ChatMessageRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'message' => [
                            'fieldName' => 'message',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'message',
                        ],
                        'date_envoie' => [
                            'fieldName' => 'date_envoie',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'date_envoie',
                        ],
                        'date_reception' => [
                            'fieldName' => 'date_reception',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'date_reception',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'message' => 'message',
                        'date_envoie' => 'date_envoie',
                        'date_reception' => 'date_reception',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'message' => 'message',
                        'date_envoie' => 'date_envoie',
                        'date_reception' => 'date_reception',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'chat_message',
                    ],
                ],
                'associationMappings' => [
                    [
                        'expediteur' => [
                            'fieldName' => 'expediteur',
                            'joinColumns' => [
                                [
                                    'name' => 'expediteur_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'messages_envoyes',
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\ChatMessage',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'expediteur_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'expediteur_id' => 'expediteur_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'expediteur_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'destinataires' => [
                            'fieldName' => 'destinataires',
                            'joinColumns' => [
                                [
                                    'name' => 'destinataires_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'messages_recus',
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\ChatMessage',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'destinataires_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'destinataires_id' => 'destinataires_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'destinataires_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
18 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Departement',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Departement',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'region' => [
                            'fieldName' => 'region',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'region',
                        ],
                        'departement' => [
                            'fieldName' => 'departement',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'departement',
                        ],
                        'departement_slug' => [
                            'fieldName' => 'departement_slug',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 180,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'departement_slug',
                        ],
                        'createdAt' => [
                            'fieldName' => 'createdAt',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'created_at',
                        ],
                        'updatedAt' => [
                            'fieldName' => 'updatedAt',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'updated_at',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'region' => 'region',
                        'departement' => 'departement',
                        'departement_slug' => 'departement_slug',
                        'created_at' => 'createdAt',
                        'updated_at' => 'updatedAt',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'region' => 'region',
                        'departement' => 'departement',
                        'departement_slug' => 'departement_slug',
                        'createdAt' => 'created_at',
                        'updatedAt' => 'updated_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'departements',
                    ],
                ],
                'entityListeners' => [
                    [
                        'preRemove' => [
                            [
                                'class' => 'App\\EventListener\\DepartementPreRemove',
                                'method' => 'preRemove',
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'userUniqueData' => [
                            'fieldName' => 'userUniqueData',
                            'mappedBy' => 'departement',
                            'targetEntity' => 'App\\Entity\\UserUniqueData',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Departement',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
19 => [
    'create' => [
        'createdAt',
    ],
    'update' => [
        'updatedAt',
    ],
    'useObjectClass' => 'App\\Entity\\Departement',
],
20 => [
    'slugs' => [
        'departement_slug' => [
            'fields' => [
                'departement',
            ],
            'slug' => 'departement_slug',
            'style' => 'default',
            'dateFormat' => 'Y-m-d-H:i',
            'updatable' => true,
            'unique' => true,
            'unique_base' => null,
            'separator' => '-',
            'prefix' => '',
            'suffix' => '',
            'handlers' => [],
            'uniqueOverTranslations' => false,
        ],
    ],
    'useObjectClass' => 'App\\Entity\\Departement',
],
21 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\ExtTranslationWpCommentMeta',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\ExtTranslationWpCommentMeta',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ExtTranslationWpCommentMetaRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'locale' => [
                            'fieldName' => 'locale',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 8,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'locale',
                        ],
                        'object_class' => [
                            'fieldName' => 'object_class',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 190,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'object_class',
                        ],
                        'field' => [
                            'fieldName' => 'field',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 32,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'field',
                        ],
                        'content' => [
                            'fieldName' => 'content',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'content',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'locale' => 'locale',
                        'object_class' => 'object_class',
                        'field' => 'field',
                        'content' => 'content',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'locale' => 'locale',
                        'object_class' => 'object_class',
                        'field' => 'field',
                        'content' => 'content',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'ext_translations_wp_commentmeta',
                    ],
                ],
                'associationMappings' => [
                    [
                        'foreign_key' => [
                            'fieldName' => 'foreign_key',
                            'joinColumns' => [
                                [
                                    'name' => 'foreign_key',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'meta_id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'extTranslationWpCommentMetas',
                            'targetEntity' => 'App\\Entity\\WpCommentmeta',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\ExtTranslationWpCommentMeta',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'foreign_key' => 'meta_id',
                            ],
                            'joinColumnFieldNames' => [
                                'foreign_key' => 'foreign_key',
                            ],
                            'targetToSourceKeyColumns' => [
                                'meta_id' => 'foreign_key',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
22 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\ExtTranslationWpComments',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\ExtTranslationWpComments',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ExtTranslationWpCommentsRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'locale' => [
                            'fieldName' => 'locale',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 8,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'locale',
                        ],
                        'object_class' => [
                            'fieldName' => 'object_class',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 190,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'object_class',
                        ],
                        'field' => [
                            'fieldName' => 'field',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 32,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'field',
                        ],
                        'content' => [
                            'fieldName' => 'content',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'content',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'locale' => 'locale',
                        'object_class' => 'object_class',
                        'field' => 'field',
                        'content' => 'content',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'locale' => 'locale',
                        'object_class' => 'object_class',
                        'field' => 'field',
                        'content' => 'content',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'ext_translations_wp_comments',
                    ],
                ],
                'associationMappings' => [
                    [
                        'foreign_key' => [
                            'fieldName' => 'foreign_key',
                            'joinColumns' => [
                                [
                                    'name' => 'foreign_key',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'comment_ID',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'extTranslationWpComments',
                            'targetEntity' => 'App\\Entity\\WpComments',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\ExtTranslationWpComments',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'foreign_key' => 'comment_ID',
                            ],
                            'joinColumnFieldNames' => [
                                'foreign_key' => 'foreign_key',
                            ],
                            'targetToSourceKeyColumns' => [
                                'comment_ID' => 'foreign_key',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
23 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\ExtTranslationWpOptions',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\ExtTranslationWpOptions',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ExtTranslationWpOptionsRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'locale' => [
                            'fieldName' => 'locale',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 8,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'locale',
                        ],
                        'object_class' => [
                            'fieldName' => 'object_class',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 190,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'object_class',
                        ],
                        'field' => [
                            'fieldName' => 'field',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 32,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'field',
                        ],
                        'content' => [
                            'fieldName' => 'content',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'content',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'locale' => 'locale',
                        'object_class' => 'object_class',
                        'field' => 'field',
                        'content' => 'content',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'locale' => 'locale',
                        'object_class' => 'object_class',
                        'field' => 'field',
                        'content' => 'content',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'ext_translations_wp_options',
                    ],
                ],
                'associationMappings' => [
                    [
                        'foreign_key' => [
                            'fieldName' => 'foreign_key',
                            'joinColumns' => [
                                [
                                    'name' => 'foreign_key',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'option_id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'extTranslationWpOptions',
                            'targetEntity' => 'App\\Entity\\WpOptions',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\ExtTranslationWpOptions',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'foreign_key' => 'option_id',
                            ],
                            'joinColumnFieldNames' => [
                                'foreign_key' => 'foreign_key',
                            ],
                            'targetToSourceKeyColumns' => [
                                'option_id' => 'foreign_key',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
24 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\ExtTranslationWpPostmeta',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\ExtTranslationWpPostmeta',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ExtTranslationWpPostmetaRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'locale' => [
                            'fieldName' => 'locale',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 8,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'locale',
                        ],
                        'object_class' => [
                            'fieldName' => 'object_class',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 190,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'object_class',
                        ],
                        'field' => [
                            'fieldName' => 'field',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 32,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'field',
                        ],
                        'content' => [
                            'fieldName' => 'content',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'content',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'locale' => 'locale',
                        'object_class' => 'object_class',
                        'field' => 'field',
                        'content' => 'content',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'locale' => 'locale',
                        'object_class' => 'object_class',
                        'field' => 'field',
                        'content' => 'content',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'ext_translations_wp_postmeta',
                    ],
                ],
                'associationMappings' => [
                    [
                        'foreign_key' => [
                            'fieldName' => 'foreign_key',
                            'joinColumns' => [
                                [
                                    'name' => 'foreign_key',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'meta_id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'extTranslationWpPostmetas',
                            'targetEntity' => 'App\\Entity\\WpPostmeta',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\ExtTranslationWpPostmeta',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'foreign_key' => 'meta_id',
                            ],
                            'joinColumnFieldNames' => [
                                'foreign_key' => 'foreign_key',
                            ],
                            'targetToSourceKeyColumns' => [
                                'meta_id' => 'foreign_key',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
25 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\ExtTranslationWpPosts',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\ExtTranslationWpPosts',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ExtTranslationWpPostsRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'locale' => [
                            'fieldName' => 'locale',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 8,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'locale',
                        ],
                        'object_class' => [
                            'fieldName' => 'object_class',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 190,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'object_class',
                        ],
                        'field' => [
                            'fieldName' => 'field',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 32,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'field',
                        ],
                        'content' => [
                            'fieldName' => 'content',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'content',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'locale' => 'locale',
                        'object_class' => 'object_class',
                        'field' => 'field',
                        'content' => 'content',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'locale' => 'locale',
                        'object_class' => 'object_class',
                        'field' => 'field',
                        'content' => 'content',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'ext_translations_wp_posts',
                    ],
                ],
                'associationMappings' => [
                    [
                        'foreign_key' => [
                            'fieldName' => 'foreign_key',
                            'joinColumns' => [
                                [
                                    'name' => 'foreign_key',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'extTranslationWpPosts',
                            'targetEntity' => 'App\\Entity\\WpPosts',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\ExtTranslationWpPosts',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'foreign_key' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'foreign_key' => 'foreign_key',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'foreign_key',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
26 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\ExtTranslationWpTerms',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\ExtTranslationWpTerms',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ExtTranslationWpTermsRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'locale' => [
                            'fieldName' => 'locale',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 8,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'locale',
                        ],
                        'object_class' => [
                            'fieldName' => 'object_class',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 190,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'object_class',
                        ],
                        'field' => [
                            'fieldName' => 'field',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 32,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'field',
                        ],
                        'content' => [
                            'fieldName' => 'content',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'content',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'locale' => 'locale',
                        'object_class' => 'object_class',
                        'field' => 'field',
                        'content' => 'content',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'locale' => 'locale',
                        'object_class' => 'object_class',
                        'field' => 'field',
                        'content' => 'content',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'ext_translations_wp_terms',
                    ],
                ],
                'associationMappings' => [
                    [
                        'foreign_key' => [
                            'fieldName' => 'foreign_key',
                            'joinColumns' => [
                                [
                                    'name' => 'foreign_key',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'term_id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'extTranslationWpTerms',
                            'targetEntity' => 'App\\Entity\\WpTerms',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\ExtTranslationWpTerms',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'foreign_key' => 'term_id',
                            ],
                            'joinColumnFieldNames' => [
                                'foreign_key' => 'foreign_key',
                            ],
                            'targetToSourceKeyColumns' => [
                                'term_id' => 'foreign_key',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
27 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\ExtTranslationWpTermTaxonomy',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\ExtTranslationWpTermTaxonomy',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ExtTranslationWpTermTaxonomyRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'locale' => [
                            'fieldName' => 'locale',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 8,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'locale',
                        ],
                        'object_class' => [
                            'fieldName' => 'object_class',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 190,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'object_class',
                        ],
                        'field' => [
                            'fieldName' => 'field',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 32,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'field',
                        ],
                        'content' => [
                            'fieldName' => 'content',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'content',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'locale' => 'locale',
                        'object_class' => 'object_class',
                        'field' => 'field',
                        'content' => 'content',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'locale' => 'locale',
                        'object_class' => 'object_class',
                        'field' => 'field',
                        'content' => 'content',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'ext_translations_wp_term_taxonomy',
                    ],
                ],
                'associationMappings' => [
                    [
                        'foreign_key' => [
                            'fieldName' => 'foreign_key',
                            'joinColumns' => [
                                [
                                    'name' => 'foreign_key',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'term_taxonomy_id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'extTranslationWpTermTaxonomies',
                            'targetEntity' => 'App\\Entity\\WpTermTaxonomy',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\ExtTranslationWpTermTaxonomy',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'foreign_key' => 'term_taxonomy_id',
                            ],
                            'joinColumnFieldNames' => [
                                'foreign_key' => 'foreign_key',
                            ],
                            'targetToSourceKeyColumns' => [
                                'term_taxonomy_id' => 'foreign_key',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
28 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\ExtTranslationWpUsermeta',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\ExtTranslationWpUsermeta',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ExtTranslationWpUsermetaRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'locale' => [
                            'fieldName' => 'locale',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 8,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'locale',
                        ],
                        'object_class' => [
                            'fieldName' => 'object_class',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 190,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'object_class',
                        ],
                        'field' => [
                            'fieldName' => 'field',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 32,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'field',
                        ],
                        'content' => [
                            'fieldName' => 'content',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'content',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'locale' => 'locale',
                        'object_class' => 'object_class',
                        'field' => 'field',
                        'content' => 'content',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'locale' => 'locale',
                        'object_class' => 'object_class',
                        'field' => 'field',
                        'content' => 'content',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'ext_translations_wp_usermeta',
                    ],
                ],
                'associationMappings' => [
                    [
                        'foreign_key' => [
                            'fieldName' => 'foreign_key',
                            'joinColumns' => [
                                [
                                    'name' => 'foreign_key',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'umeta_id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'extTranslationWpUsermetas',
                            'targetEntity' => 'App\\Entity\\WpUsermeta',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\ExtTranslationWpUsermeta',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'foreign_key' => 'umeta_id',
                            ],
                            'joinColumnFieldNames' => [
                                'foreign_key' => 'foreign_key',
                            ],
                            'targetToSourceKeyColumns' => [
                                'umeta_id' => 'foreign_key',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
29 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\InformationsFacturationUtilisateur',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\InformationsFacturationUtilisateur',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\InformationsFacturationUtilisateurRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'nomOuSociete' => [
                            'fieldName' => 'nomOuSociete',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nom_ou_societe',
                        ],
                        'adresse' => [
                            'fieldName' => 'adresse',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'adresse',
                        ],
                        'ville' => [
                            'fieldName' => 'ville',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 70,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'ville',
                        ],
                        'codePostal' => [
                            'fieldName' => 'codePostal',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 50,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'code_postal',
                        ],
                        'pays' => [
                            'fieldName' => 'pays',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 10,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'pays',
                        ],
                        'numeroTva' => [
                            'fieldName' => 'numeroTva',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 100,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'numero_tva',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom_ou_societe' => 'nomOuSociete',
                        'adresse' => 'adresse',
                        'ville' => 'ville',
                        'code_postal' => 'codePostal',
                        'pays' => 'pays',
                        'numero_tva' => 'numeroTva',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nomOuSociete' => 'nom_ou_societe',
                        'adresse' => 'adresse',
                        'ville' => 'ville',
                        'codePostal' => 'code_postal',
                        'pays' => 'pays',
                        'numeroTva' => 'numero_tva',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'informations_facturation_utilisateur',
                    ],
                ],
                'associationMappings' => [
                    [
                        'profile' => [
                            'fieldName' => 'profile',
                            'targetEntity' => 'App\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'profile_id',
                                    'unique' => true,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'mappedBy' => null,
                            'inversedBy' => 'informationsFacturationUtilisateur',
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 1,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\InformationsFacturationUtilisateur',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'profile_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'profile_id' => 'profile_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'profile_id',
                            ],
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
30 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Message',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Message',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\MessageRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'content' => [
                            'fieldName' => 'content',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'content',
                        ],
                        'sentDate' => [
                            'fieldName' => 'sentDate',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'sent_date',
                        ],
                        'receiptDate' => [
                            'fieldName' => 'receiptDate',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'receipt_date',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'content' => 'content',
                        'sent_date' => 'sentDate',
                        'receipt_date' => 'receiptDate',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'content' => 'content',
                        'sentDate' => 'sent_date',
                        'receiptDate' => 'receipt_date',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'wp_messages',
                    ],
                ],
                'associationMappings' => [
                    [
                        'channel' => [
                            'fieldName' => 'channel',
                            'joinColumns' => [
                                [
                                    'name' => 'channel_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'inversedBy' => 'messages',
                            'targetEntity' => 'App\\Entity\\Channel',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Message',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'channel_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'channel_id' => 'channel_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'channel_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'addressee' => [
                            'fieldName' => 'addressee',
                            'joinColumns' => [
                                [
                                    'name' => 'addressee_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'receivedMessages',
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Message',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'addressee_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'addressee_id' => 'addressee_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'addressee_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'sender' => [
                            'fieldName' => 'sender',
                            'joinColumns' => [
                                [
                                    'name' => 'sender_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'sentMessages',
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Message',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'sender_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'sender_id' => 'sender_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'sender_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
31 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Newsletter',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Newsletter',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\NewsletterRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'email',
                        ],
                        'user_name' => [
                            'fieldName' => 'user_name',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'user_name',
                        ],
                        'status' => [
                            'fieldName' => 'status',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'status',
                        ],
                        'createdAt' => [
                            'fieldName' => 'createdAt',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'created_at',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'user_name' => 'user_name',
                        'status' => 'status',
                        'created_at' => 'createdAt',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'user_name' => 'user_name',
                        'status' => 'status',
                        'createdAt' => 'created_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'newsletter',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
32 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\OffreInterne',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\OffreInterne',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\OffreInterneRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'titre' => [
                            'fieldName' => 'titre',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 180,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'titre',
                        ],
                        'descriptif' => [
                            'fieldName' => 'descriptif',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'descriptif',
                        ],
                        'tarif' => [
                            'fieldName' => 'tarif',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'tarif',
                        ],
                        'slug' => [
                            'fieldName' => 'slug',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 180,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'slug',
                        ],
                        'creerAnnonce' => [
                            'fieldName' => 'creerAnnonce',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'creer_annonce',
                        ],
                        'creerDevis' => [
                            'fieldName' => 'creerDevis',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'creer_devis',
                        ],
                        'referencement' => [
                            'fieldName' => 'referencement',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'referencement',
                        ],
                        'packsProduction' => [
                            'fieldName' => 'packsProduction',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'packs_production',
                        ],
                        'enteteDescriptif' => [
                            'fieldName' => 'enteteDescriptif',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'entete_descriptif',
                        ],
                        'createdAt' => [
                            'fieldName' => 'createdAt',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'created_at',
                        ],
                        'updatedAt' => [
                            'fieldName' => 'updatedAt',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'updated_at',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'titre' => 'titre',
                        'descriptif' => 'descriptif',
                        'tarif' => 'tarif',
                        'slug' => 'slug',
                        'creer_annonce' => 'creerAnnonce',
                        'creer_devis' => 'creerDevis',
                        'referencement' => 'referencement',
                        'packs_production' => 'packsProduction',
                        'entete_descriptif' => 'enteteDescriptif',
                        'created_at' => 'createdAt',
                        'updated_at' => 'updatedAt',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'titre' => 'titre',
                        'descriptif' => 'descriptif',
                        'tarif' => 'tarif',
                        'slug' => 'slug',
                        'creerAnnonce' => 'creer_annonce',
                        'creerDevis' => 'creer_devis',
                        'referencement' => 'referencement',
                        'packsProduction' => 'packs_production',
                        'enteteDescriptif' => 'entete_descriptif',
                        'createdAt' => 'created_at',
                        'updatedAt' => 'updated_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'offre_interne',
                    ],
                ],
                'associationMappings' => [
                    [
                        'abonnements' => [
                            'fieldName' => 'abonnements',
                            'mappedBy' => 'offre',
                            'targetEntity' => 'App\\Entity\\Abonnement',
                            'cascade' => [],
                            'orphanRemoval' => true,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\OffreInterne',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
33 => [
    'create' => [
        'createdAt',
    ],
    'update' => [
        'updatedAt',
    ],
    'useObjectClass' => 'App\\Entity\\OffreInterne',
],
34 => [
    'slugs' => [
        'slug' => [
            'fields' => [
                'titre',
            ],
            'slug' => 'slug',
            'style' => 'default',
            'dateFormat' => 'Y-m-d-H:i',
            'updatable' => true,
            'unique' => true,
            'unique_base' => null,
            'separator' => '-',
            'prefix' => '',
            'suffix' => '',
            'handlers' => [],
            'uniqueOverTranslations' => false,
        ],
    ],
    'useObjectClass' => 'App\\Entity\\OffreInterne',
],

]];

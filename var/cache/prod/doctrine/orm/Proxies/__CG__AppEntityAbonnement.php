<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Abonnement extends \App\Entity\Abonnement implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'offre', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'tarif', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'abonnementActif', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'dateFin', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'tag', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'nomOuSociete', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'adresse', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'ville', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'codePostal', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'pays', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'numeroTva', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'reccuring_payment_id', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'reccuring_payment_payin_id', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'createdAt', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'updatedAt'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'offre', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'tarif', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'abonnementActif', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'dateFin', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'tag', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'nomOuSociete', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'adresse', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'ville', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'codePostal', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'pays', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'numeroTva', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'reccuring_payment_id', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'reccuring_payment_payin_id', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'createdAt', '' . "\0" . 'App\\Entity\\Abonnement' . "\0" . 'updatedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Abonnement $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(?\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(?\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getUser(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(?\App\Entity\User $user): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getOffre(): ?\App\Entity\OffreInterne
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOffre', []);

        return parent::getOffre();
    }

    /**
     * {@inheritDoc}
     */
    public function setOffre(?\App\Entity\OffreInterne $offre): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOffre', [$offre]);

        return parent::setOffre($offre);
    }

    /**
     * {@inheritDoc}
     */
    public function getTarif(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTarif', []);

        return parent::getTarif();
    }

    /**
     * {@inheritDoc}
     */
    public function setTarif(float $tarif): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTarif', [$tarif]);

        return parent::setTarif($tarif);
    }

    /**
     * {@inheritDoc}
     */
    public function isAbonnementActif(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAbonnementActif', []);

        return parent::isAbonnementActif();
    }

    /**
     * {@inheritDoc}
     */
    public function setAbonnementActif(bool $abonnementActif): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAbonnementActif', [$abonnementActif]);

        return parent::setAbonnementActif($abonnementActif);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateFin(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateFin', []);

        return parent::getDateFin();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateFin(\DateTimeInterface $dateFin): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateFin', [$dateFin]);

        return parent::setDateFin($dateFin);
    }

    /**
     * {@inheritDoc}
     */
    public function getTag(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTag', []);

        return parent::getTag();
    }

    /**
     * {@inheritDoc}
     */
    public function setTag(?string $tag): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTag', [$tag]);

        return parent::setTag($tag);
    }

    /**
     * {@inheritDoc}
     */
    public function getNomOuSociete(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomOuSociete', []);

        return parent::getNomOuSociete();
    }

    /**
     * {@inheritDoc}
     */
    public function setNomOuSociete(?string $nomOuSociete): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomOuSociete', [$nomOuSociete]);

        return parent::setNomOuSociete($nomOuSociete);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdresse(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdresse', []);

        return parent::getAdresse();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdresse(?string $adresse): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdresse', [$adresse]);

        return parent::setAdresse($adresse);
    }

    /**
     * {@inheritDoc}
     */
    public function getVille(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVille', []);

        return parent::getVille();
    }

    /**
     * {@inheritDoc}
     */
    public function setVille(?string $ville): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVille', [$ville]);

        return parent::setVille($ville);
    }

    /**
     * {@inheritDoc}
     */
    public function getCodePostal(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodePostal', []);

        return parent::getCodePostal();
    }

    /**
     * {@inheritDoc}
     */
    public function setCodePostal(?string $codePostal): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodePostal', [$codePostal]);

        return parent::setCodePostal($codePostal);
    }

    /**
     * {@inheritDoc}
     */
    public function getPays(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPays', []);

        return parent::getPays();
    }

    /**
     * {@inheritDoc}
     */
    public function setPays(?string $pays): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPays', [$pays]);

        return parent::setPays($pays);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumeroTva(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumeroTva', []);

        return parent::getNumeroTva();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumeroTva(?string $numeroTva): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumeroTva', [$numeroTva]);

        return parent::setNumeroTva($numeroTva);
    }

    /**
     * {@inheritDoc}
     */
    public function getReccuringPaymentId(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReccuringPaymentId', []);

        return parent::getReccuringPaymentId();
    }

    /**
     * {@inheritDoc}
     */
    public function setReccuringPaymentId(?string $reccuring_payment_id): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReccuringPaymentId', [$reccuring_payment_id]);

        return parent::setReccuringPaymentId($reccuring_payment_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getReccuringPaymentPayinId(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReccuringPaymentPayinId', []);

        return parent::getReccuringPaymentPayinId();
    }

    /**
     * {@inheritDoc}
     */
    public function setReccuringPaymentPayinId(?string $reccuring_payment_payin_id): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReccuringPaymentPayinId', [$reccuring_payment_payin_id]);

        return parent::setReccuringPaymentPayinId($reccuring_payment_payin_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTimeInterface $createdAt): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

}
